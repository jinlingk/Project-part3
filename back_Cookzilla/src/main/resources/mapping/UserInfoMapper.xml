<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.nyu.lk.cookzilla.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="edu.nyu.lk.cookzilla.model.UserInfo" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="groupId" property="groupid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    username, userId, password, email, phone, avatar, groupId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from UserInfo
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
        <include refid="Base_Column_List"/>
    from UserInfo
    where userId = #{userId, jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from UserInfo
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="edu.nyu.lk.cookzilla.model.UserInfo" >
    insert into UserInfo (username, userId, password, 
      email, phone, avatar, 
      groupId)
    values (#{username,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{groupid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.nyu.lk.cookzilla.model.UserInfo" >
    insert into UserInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="groupid != null" >
        groupId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nyu.lk.cookzilla.model.UserInfo" >
    update UserInfo
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null" >
        groupId = #{groupid,jdbcType=INTEGER},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nyu.lk.cookzilla.model.UserInfo" >
    update UserInfo
    set userId = #{userid,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      groupId = #{groupid,jdbcType=INTEGER}
    where username = #{username,jdbcType=VARCHAR}
  </update>
</mapper>